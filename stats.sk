variables:
	{kills::players::%player%} = 0
	{nw::players::%player%} = 0

	{k-ranks::murderer::req} = 500
	{k-ranks::genocidal-maniac::req} = 1000
	{k-ranks::sadistic::req} = 2500
	{k-ranks::demon::req} = 5000
	{k-ranks::reaper::req} = 7500
	{k-ranks::blood-god::req} = 10000

	{nw-ranks::aristocrat::req} = 250000
	{nw-ranks::huge-aristocrat::req} =  500000
	{nw-ranks::ultimate-aristocrat::req} = 1000000
	# {staff_ranks::*} = "owner", "co-owner", "head-mod", "senior-mod", "mod", "trialmod", "trainee-mod", "op", "trial-builder", "builder", "head-builder"


options:
	kelp_value: 1024 # Compressed Kelp is 4x this value
	pickle_value: 2048
	credit_value: 4096

command /define_nw_item <text>: # ONLY NEEDS TO BE USED ONCE, WHEN THE SKRIPT IS FIRST INSTATED
	permission: skript.nwadmin
	permission message: &cInsufficient Permissions.
	usage: /define_nw_item <credit | ckelp> while holding the item
	trigger:
		if arg-1 contains "cre":
			set {nw::items::credit} to player's tool
			send "&3Defined &6Credit Item&3 as &3%{nw::items::credit}%"
			stop
		else if arg-1 contains "ckelp" or "compressed kelp" or "comp kelp":
			set {nw::items::ckelp} to player's tool
			send "&3Defined &6Compressed Kelp Item&3 as &3%{nw::items::ckelp}%"
			stop
		send "&cThat item is not supported."


### KILLS ### 

on death of player:
	attacker is player
	if attacker is victim:
		stop
	else:
		add 1 to {kills::players::%attacker%}
	
command /kills [<offline player>]:
	trigger:
		if arg-1 is not set:
			if command sender is not console:
				message "You have %{kills::players::%player%}% kills in total."
			else:
				message "&cA console does not have a kill count."
		else if player has permission "skript.getkills":
			message "&b%arg-1% has &6%{kills::players::%arg-1%}%&r kills in total."
		else:
			message "&cYou do not have permission to view the kills of other players."

command /modifykills <offline player> <text> <number>:
	aliases: /changekills, /ck, /mk
	usage: /ck <target> <+ | -> <amount>
	permission: skript.modifykills
	permission message: &cInsufficient Permissions.
	trigger:
		if arg-2 contains "add" or "+" or "sum":
			add arg-3 to {kills::players::%arg-1%}
		else if arg-2 contains "subtract" or "sub" or "minus" or "-" or "difference" or "diff":
			subtract arg-3 from {kills::players::%arg-1%}
		else:
			send "&cOne of your arguments is invalid. Please try again."
		send "The player &b%arg-1%&r now has &6%{kills::players::%arg-1%}%&r kills total" to player

command /checkkills:
	permission: skript.checkkills
	permission message: you dont have permission
	trigger:
		loop all players:
			send "The player &b%loop-player%&r has &6%{kills::players::%loop-player%}%&r kills in total." to player

on join:
	if {kills-updated::*} does not contain player:
		add {kill counter.%player%.kills_total} to {kills::players::%player%}
		set {kill counter.%player%.kills_total} to 0
		add player to {kills-updated::*}

### NETWORTH ###
function getInventoryValue(p: player) :: number:

	set {_nw} to (the amount of sea pickles in {_p}'s inventory) * {@pickle_value} 
	add (the amount of dried kelp blocks in {_p}'s inventory) * {@kelp_value} to {_nw}
	add (the amount of {nw::items::ckelp} in {_p}'s inventory) * ({@kelp_value} * 3) to {_nw} # Set to *3, as the other 1 is added earlier
	add (the amount of {nw::items::credit} in {_p}'s inventory) * {@credit_value} to {_nw}

	return {_nw}

function removeItems(p: player, a: number, i: item, t: boolean):
	set {_a_inv} to the amount of {_i} in {_p}'s inventory
	if {_a_inv} is less than {_a}:
		send "&cYou do not have enough of this item." to {_p}
	else:
		remove {_a} of {_i} from {_p}'s inventory
		if {_i} is {nw::items::ckelp}:
			add {_a} * {@kelp_value} * 4 to {_nw}
		else if {_i} is {nw::items::credit}:
			add {_a} * {@credit_value} to {_nw}
		else if {_i} is a dried kelp block:
			add {_a} * {@kelp_value} to {_nw}
		else if {_i} is a sea pickle:
			add {_a} * {@pickle_value} to {_nw}
		else:
			send "&cInvalid Item. If you get this error, please report it to a staff member." to {_p}
		add {_nw} to {nw::players::%{_p}%}
		if {_t} is true:
			send "&3Added &6%{_nw}% &3to your Net Worth." to {_p}
			send "&3Your Net Worth is now &6%{nw::players::%{_p}%}%&3." to {_p}

function addNWItems(p: player, a: number, i: item):
	set {_slots} to ceil({_a} / 64)
	if {_i} is {nw::items::ckelp}:
		set {_value} to ({@kelp_value} * 4)
	else if {_i} is {nw::items::credit}:
		set {_value} to {@credit_value}
	else if {_i} is a dried kelp block:
		set {_value} to {@kelp_value}
	else if {_i} is a sea pickle:
		set {_value} to {@pickle_value}
	else:
		send "&cInvalid Item. If you get this error, please report it to a staff member." to {_p}
		stop
	if {_a} is 0:
		set {_a} to floor({nw::players::%{_p}%} / ({_value}))
		remove ({_a} * {_value}) from {nw::players::%{_p}%}
		give {_p} {_a} of {_i}
		send "&3Added&9 %{_a}%&3 items to your inventory, at the cost of&6 %{_a} * {_value}%&3 Net Worth." to {_p}
		send "&3Your Net Worth is now &6%{nw::players::%{_p}%}%&3." to {_p}
	else if {nw::players::%{_p}%} is less than ({_a} * {_value}):
		send "&cYou do not have enough Net Worth to perform this action." to {_p}
	else:
		# if there are at least {_slots} slots that are empty in the player's inventory:
		remove ({_a} * {_value}) from {nw::players::%{_p}%}
		give {_p} {_a} of {_i}
		send "&3Added&9 %{_a}%&3 items to your inventory, at the cost of&6 %{_a} * {_value}%&3 Net Worth." to {_p}
		send "&3Your Net Worth is now &6%{nw::players::%{_p}%}%&3." to {_p}
		# else:
		# 	send "&cYou do not have enough empty inventory space."

function clearNWItems(p: player):
	set {_v} to getInventoryValue({_p})
	add {_v} to {nw::players::%{_p}%}

	remove all dried kelp blocks from {_p}'s inventory
	remove all sea pickles from {_p}'s inventory
	remove all {nw::items::credit} from {_p}'s inventory
	remove all {nw::items::ckelp} from {_p}'s inventory

	send "&3Added &6%{_v}% &3to your Net Worth." to {_p}
	send "&3Your Net Worth is now &6%{nw::players::%{_p}%}%&3." to {_p}

function networthGUI(p: player):
	set {_gui} to chest inventory with 5 rows named "Convert Items"

	set {_kamt} to (the amount of dried kelp blocks in {_p}'s inventory)
	set {_pamt} to (the amount of sea pickles in {_p}'s inventory)
	set {_ckamt} to (the amount of {nw::items::ckelp} in {_p}'s inventory)
	set {_camt} to (the amount of {nw::items::credit} in {_p}'s inventory)

	set {_total} to getInventoryValue({_p})

	set {_max::kelp} to floor({nw::players::%{_p}%} / ({@kelp_value}))
	set {_max::pickles} to floor({nw::players::%{_p}%} / ({@pickle_value}))
	set {_max::ckelp} to floor({nw::players::%{_p}%} / ({@kelp_value} * 4))
	set {_max::credits} to floor({nw::players::%{_p}%} / ({@credit_value}))

	set slot (integers between 0 and 45) of {_gui} to lime stained glass pane named " "
	set slot (integers between 0 and 4) and (integers between 9 and 12) and (integers between 18 and 21) and (integers between 27 and 30) and (integers between 36 and 39) of {_gui} to red stained glass pane named " "
	set slot 4 and 13 and 22 and 31 and 40 of {_gui} to light blue stained glass pane named " "
	# Important Things
	set slot 13 of {_gui} to the skull of {_p} named "&6%name of {_p}%" with lore " &b&l»&r &3Net Worth: &6%{nw::players::%{_p}%}%"
	set slot 31 of {_gui} to paper named "&c&lDEPOSIT &r&3| &l&bEVERYTHING" with lore " &b&l»&r &3Inventory Value: &6%{_total}%"
	# Deposits
	set slot 10 of {_gui} to dried kelp block named "&c&lDEPOSIT &r&3| &2Dried Kelp Block" with lore " &b&l»&r &3Left Click: Deposit &b&lALL" and " &b└ &6%{_kamt}%&3 for &6%{_kamt} * {@kelp_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Deposit &b&l1" and " &b└ &3For &6%1 * {@kelp_value}%&3 NW"	
	set slot 11 of {_gui} to sea pickle named "&c&lDEPOSIT &r&3| &3Sea Pickles" with lore " &b&l»&r &3Left Click: Deposit &b&lALL" and " &b└ &6%{_pamt}%&3 for &6%{_pamt} * {@pickle_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Deposit &b&l1" and " &b└ &3For &6%1 * {@pickle_value}%&3 NW"
	set slot 28 of {_gui} to dried kelp block of mending 10 named "&c&lDEPOSIT &r&3| &2Compressed Kelp" with lore " &b&l»&r &3Left Click: Deposit &b&lALL" and " &b└ &6%{_ckamt}%&3 for &6%{_ckamt} * {@kelp_value} * 4%&3 NW" and " " and " &b&l»&r &3Right Click: Deposit &b&l1" and " &b└ &3For &6%4 * {@kelp_value}%&3 NW"	
	set slot 29 of {_gui} to amethyst block of mending 10 named "&c&lDEPOSIT &r&3| &6Credits" with lore " &b&l»&r &3Left Click: Deposit &b&lALL" and " &b└ &6%{_camt}%&3 for &6%{_camt} * {@credit_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Deposit &b&l1" and " &b└ &3For &6%1 * {@credit_value}%&3 NW"

	# Withdrawals
	set slot 15 of {_gui} to dried kelp block named "&a&lWITHDRAW &r&3| &2Dried Kelp Block" with lore " &b&l»&r &3Left Click: Withdraw &b&lMAX" and " &b└ &6%{_max::kelp}%&3 for &6%{_max::kelp} * {@kelp_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Withdraw &b&l1" and " &b└ &3For &6%1 * {@kelp_value}%&3 NW"
	set slot 16 of {_gui} to sea pickle named "&a&lWITHDRAW &r&3| &3Sea Pickles" with lore " &b&l»&r &3Left Click: Withdraw &b&lMAX" and " &b└ &6%{_max::pickles}%&3 for &6%{_max::pickles} * {@pickle_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Withdraw &b&l1" and " &b└ &3For &6%1 * {@pickle_value}%&3 NW"
	set slot 33 of {_gui} to dried kelp block of mending 10 named "&a&lWITHDRAW &r&3| &2Compressed Kelp" with lore " &b&l»&r &3Left Click: Withdraw &b&lMAX" and " &b└ &6%{_max::ckelp}%&3 for &6%{_max::ckelp} * {@kelp_value} * 4%&3 NW" and " " and " &b&l»&r &3Right Click: Withdraw &b&l1" and " &b└ &3For &6%4 * {@kelp_value}%&3 NW"
	set slot 34 of {_gui} to amethyst block of mending 10 named "&a&lWITHDRAW &r&3| &2Compressed Kelp" with lore " &b&l»&r &3Left Click: Withdraw &b&lMAX" and " &b└ &6%{_max::credits}%&3 for &6%{_max::credits} * {@credit_value}%&3 NW" and " " and " &b&l»&r &3Right Click: Withdraw &b&l1" and " &b└ &3For &6%1 * {@credit_value}%&3 NW"
	
	open {_gui} to {_p}

on inventory click:
	name of event-inventory is "Convert Items"
	cancel event
	event-inventory is not player's inventory
	# Important
	if clicked slot is 31: # Paper - Withdraw All
		set {_v} to getInventoryValue(player)
		removeItems(player, the amount of dried kelp blocks in player's inventory, dried kelp block, no)
		removeItems(player, the amount of sea pickles in player's inventory, sea pickle, no)
		removeItems(player, the amount of {nw::items::ckelp} in player's inventory, {nw::items::ckelp}, no)
		removeItems(player, the amount of {nw::items::credit} in player's inventory, {nw::items::credit}, no)
		networthGUI(player)
		send "&3Added &6%{_v}%&3 to your Net Worth."
		send "&3Your Net Worth is now &6%{nw::players::%player%}%&3."
	# Deposits
	else if clicked slot is 10: # Kelp
		if click type is left mouse button:
			removeItems(player, the amount of dried kelp blocks in player's inventory, dried kelp block, yes)
		else:
			removeItems(player, 1, dried kelp block, yes)
		networthGUI(player)
	else if clicked slot is 11: # Pickles
		if click type is left mouse button:
			removeItems(player, the amount of sea pickles in player's inventory, sea pickle, yes)
		else:
			removeItems(player, 1, sea pickle, yes)
		networthGUI(player)
	else if clicked slot is 28: # CKelp
		if click type is left mouse button:
			removeItems(player, the amount of {nw::items::ckelp} in player's inventory, {nw::items::ckelp}, yes)
		else:
			removeItems(player, 1, {nw::items::ckelp}, yes)
		networthGUI(player)
	else if clicked slot is 29:
		if click type is left mouse button: # Credits
			removeItems(player, the amount of {nw::items::credit} in player's inventory, {nw::items::credit}, yes)
		else:
			removeItems(player, 1, {nw::items::credit}, yes)
		networthGUI(player)
	# Withdrawals
	else if clicked slot is 15: # Kelp
		if click type is left mouse button:
			addNWItems(player, 0, dried kelp block)
		else:
			addNWItems(player, 1, dried kelp block)
		networthGUI(player)
	else if clicked slot is 16: # Pickles
		if click type is left mouse button:
			addNWItems(player, 0, sea pickle)
		else:
			addNWItems(player, 1, sea pickle)
		networthGUI(player)
	else if clicked slot is 33: # CKelp
		if click type is left mouse button:
			addNWItems(player, 0, {nw::items::ckelp})
		else:
			addNWItems(player, 1, {nw::items::ckelp})
		networthGUI(player)
	else if clicked slot is 34: # Credits
		if click type is left mouse button:
			addNWItems(player, 0, {nw::items::credit})
		else:
			addNWItems(player, 1, {nw::items::credit})
		networthGUI(player)

command /convert:
	aliases: /cv
	trigger:
		networthGUI(player)
		
command /nw [<text>] [<offline player>] [<number>]: # operator, amount, target
	aliases: /worth, /networth
	trigger:
		if arg-1 is "-h" or "help" or "-i" or "info":
			send ""
			send " &b| &3About &6Net Worth&b |&3 ----------------"
			send ""
			send " &b&l» &r&3Networth can be Withdrawn and Deposited using /convert (or &3/cv&3)."
			send " &b┌ &2Dried Kelp Blocks&b (&3Equal to &6%1 *{@kelp_value}% NW&b)&3," 
			send " &b├ &3Sea Pickles&b (&3Equal to &6%1 * {@pickle_value}% NW&b)&3,"
			send " &b├ &2Compressed Kelp&b (&3Equal to &6%4 * {@kelp_value}% NW&b)&3."
			send " &b├ &6Credits&b (&3Equal to &6%1 * {@credit_value}% NW&b)&3."
			send " &b└─ &3In your inventory and ender chest."
			send " &b&l» &r&3Networth is based in Netherite Ingots&3."
			send " &b&l» &r&3You can do &b/nw&3, &b/networth&3, or &b/worth&3 to get your networth&3."
			send ""
			send " &b| &3About &6Net Worth&b |&3 ----------------"
			send ""
			if player has permission "skript.nwadmin":
				send " &b| &3Admin &6Net Worth&3 Help&b |&3 ----------------"
				send ""
				send " &b&l» &r&3Usage: &9/nw <operator> <target> <amount>"
				send ""
				send " &bPossible Operators:"
				send " &b┌ ?&3 or&b query &6&l»&r&3 Returns the balance of the target."
				send " &b├ +&3,&b add&3,&b sum&3 or&b plus &6&l»&r&3 Adds the specified value."
				send " &b├ -&3,&b sub&3,&b diff&3 or&b minus &6&l»&r&3 Subtracts the specified value."
				send " &b└ =&3,&b sub&3,&b diff&3 or&b minus &6&l»&r&3 Sets the balance of the target to the specified value."
				send ""
				send " &b| &3Admin &6Net Worth&3 Help&b |&3 ----------------"
		else if arg-1 is "gui":
			networthGUI(player)
		else if arg-1 is set:
			set {_uuid} to arg-2's uuid
			if player has permission "skript.nwadmin":
				if arg-1 is "get" or "query" or "?":
					send "&3Player &b%arg-2%&3 has &6%{nw::players::%arg-2%}%&3 Net Worth."
				else if arg-1 is "add" or "+" or "sum" or "plus":
					send "&3Added &6%arg-3% &3NW to the balance of &b%arg-2%&3."
					send "&3Their old balance: &6%{nw::players::%arg-2%}%&3."
					add arg-3 to {nw::players::%arg-2%}
					send "&3Their new balance: &6%{nw::players::%arg-2%}%&3."
				else if arg-1 is "minus" or "-" or "difference" or "diff" or "remove" or "subtract" or "sub":
					send "&3Removed &6%arg-3% &3NW from the balance of &b%arg-2%&3."
					send "&3Their old balance: &6%{nw::players::%arg-2%}%&3."
					remove arg-3 from {nw::players::%arg-2%}
					send "&3Their new balance: &6%{nw::players::%arg-2%}%&3."
				else if arg-1 is "set" or "=":
					send "&3Set the balance of &b%arg-2%&3 to &6%arg-3%&3."
					send "&3Their old balance: &6%{nw::players::%arg-2%}%&3."
					set {nw::players::%arg-2%} to arg-3
				else:
					send "&cUnsupported Operator."
			else:
				send "&cInsufficient Permissions."
		else:
			send "&3Your Net Worth is &6%{nw::players::%player%}%&3."
			send "&3Useful Commands: &b/convert&3, &b/nw help&3."
				

### RANKS ###
function setRank(p: offline player, r: text):
	make console execute "/lp user %{_p}% parent set %{_r}%"
	set {ranks::%{_p}%} to {_r}

function removeRank(p: offline player):
	set {_r} to {ranks::%{_p}%}
	make console execute "/lp user %{_p}% parent set default"
	set {ranks::%{_p}%} to "default"
			
command /setrank <offline player> <text>:
	permission: skript.addranks
	permission message: you dont have permission
	trigger:
		set {_moderated_ranks::*} to "owner", "co-owner", "head-mod", "senior-mod", "mod", "trialmod", "trainee-mod", "op", "trial-builder", "builder", "head-builder"
		loop {_moderated_ranks::*}:
			if {_r} contains loop-value:
				send "&cYou cannot set that player's rank."
				stop
		setRank(arg-1, arg-2)
		send "&3Set the rank of &6%arg-1% &3to &6%arg-2%&3."
		
command /removerank <offline player>:
	permission: skript.removeranks
	permission message: you dont have permission
	trigger:
		set {_moderated_ranks::*} to "owner", "co-owner", "head-mod", "senior-mod", "mod", "trialmod", "trainee-mod", "op", "trial-builder", "builder", "head-builder"
		loop {_moderated_ranks::*}:
			if {_r} contains loop-value:
				send "&cYou cannot set that player's rank."
				stop
		setRank(arg-1, "default")
		send "&3Removed the rank of &6%arg-1%&3."

function ranksGuiMain(p: player):
	set {_gui} to chest inventory with 3 rows named "§eRanks Menu"

	set slot (integers between 0 and 26) of {_gui} to blue stained glass pane named " "
	set slot 8 of {_gui} to barrier block named "&cClear Rank"
	set slot 11 of {_gui} to netherite sword named "&cKill &3Ranks&r" with lore "&3Awarded to players with the required number of &cPlayer Kills&r"
	enchant slot 11 of {_gui} with sharpness 10
	set slot 13 of {_gui} to command block named "&eStaff &3Ranks&r" with lore "&3Obtainable by applying on our Discord."
	enchant slot 13 of {_gui} with mending 10
	set slot 15 of {_gui} to dried kelp block named "&6Networth &3Ranks&r" with lore "&3Awarded to players with a certain amount of &6Net Worth&r"
	enchant slot 15 of {_gui} with fortune 10
	open {_gui} to {_p}

function ranksGuiKills(p: player):
	set {_gui} to chest inventory with 3 rows named "§cKills Ranks"
	## SOME OF THESE COLOURS ARE PROBABLY RIGHT
	set slot (integers between 0 and 26) of {_gui} to blue stained glass pane named " "
	set slot 8 of {_gui} to barrier block named "&cClear Rank"
	if {kills::players::%{_p}%} is less than {k-ranks::murderer::req}:
		set slot 10 of {_gui} to wooden sword named "&31. &cMurderer&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::murderer::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::murderer::req} - {kills::players::%{_p}%}%"
	else:
		set slot 10 of {_gui} to wooden sword of sharpness 10 named "&31. &cMurderer&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::murderer::req}% &3Kills" and " &b&l»&r &9Click to Equip"
	
	if {kills::players::%{_p}%} is less than {k-ranks::genocidal-maniac::req}:
		set slot 11 of {_gui} to stone sword named "&32.<#983040> Genocidal Maniac &r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::genocidal-maniac::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::genocidal-maniac::req} - {kills::players::%{_p}%}%"
	else:
		set slot 11 of {_gui} to stone sword of sharpness 10 named "&32.<#983040> Genocidal Maniac &r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::genocidal-maniac::req}% &3Kills" and " &b&l»&r &9Click to Equip"
	
	if {kills::players::%{_p}%} is less than {k-ranks::sadistic::req}:
		set slot 12 of {_gui} to gold sword named "&33. &r &dSadistic&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::sadistic::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::sadistic::req} - {kills::players::%{_p}%}%"
	else:
		set slot 12 of {_gui} to gold sword of sharpness 10 named "&33. &dSadistic&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::sadistic::req}% &3Kills" and " &b&l»&r &9Click to Equip"

	if {kills::players::%{_p}%} is less than {k-ranks::demon::req}:
		set slot 14 of {_gui} to iron sword named "&34.<#610000> Demon&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::demon::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::demon::req} - {kills::players::%{_p}%}%"
	else:
		set slot 14 of {_gui} to iron sword of sharpness 10 named "&34.<#610000> Demon&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::demon::req}% &3Kills" and " &b&l»&r &9Click to Equip"
	
	if {kills::players::%{_p}%} is less than {k-ranks::demon::req}:
		set slot 15 of {_gui} to diamond sword named "&35.&5 Reaper&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::reaper::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::reaper::req} - {kills::players::%{_p}%}%"
	else:
		set slot 15 of {_gui} to diamond sword of sharpness 10 named "&35.&5 Reaper&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::reaper::req}% &3Kills" and " &b&l»&r &9Click to Equip"

	if {kills::players::%{_p}%} is less than {k-ranks::blood-god::req}:
		set slot 16 of {_gui} to netherite sword named "&36. &6Blood God&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::blood-god::req}% &3Kills" and " &b&l»&r &3Kills Left: &c%{k-ranks::blood-god::req} - {kills::players::%{_p}%}%"
	else:
		set slot 16 of {_gui} to netherite sword of sharpness 10 named "&36. &6Blood God&r" with lore " &b&l»&r &3Requirement: &c%{k-ranks::blood-god::req}% &3Kills" and " &b&l»&r &9Click to Equip"
	set slot 26 of {_gui} to feather named "&cBack&r"
	open {_gui} to {_p}

function ranksGuiNetworth(p: player):
	set {_gui} to chest inventory with 3 rows named "§6Networth Ranks"
	## SOME OF THESE COLOURS ARE PROBABLY RIGHT
	set slot (integers between 0 and 26) of {_gui} to blue stained glass pane named " "
	set slot 8 of {_gui} to barrier block named "&cClear Rank"
	if {nw::players::%{_p}%} is less than {nw-ranks::aristocrat::req}:
		set slot 11 of {_gui} to dried kelp named "&31. &3Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::aristocrat::req}% &3Net Worth" and " &b&l»&r &3Net Worth Left: &6%{nw-ranks::aristocrat::req} - {nw::players::%{_p}%}%"
	else:
		set slot 11 of {_gui} to dried kelp of fortune 10 named "&31. &3Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::aristocrat::req}% &3Net Worth" and " &b&l»&r &9Click to Equip"
	if {nw::players::%{_p}%} is less than {nw-ranks::huge-aristocrat::req}:
		set slot 13 of {_gui} to dried kelp block named "&32. &aHuge Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::huge-aristocrat::req}% &3Net Worth" and " &b&l»&r &3Net Worth Left: &6%{nw-ranks::huge-aristocrat::req} - {nw::players::%{_p}%}%"
	else:
		set slot 13 of {_gui} to dried kelp block of fortune 10 named "&32. &aHuge Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::huge-aristocrat::req}% &3Net Worth" and " &b&l»&r &9Click to Equip"
	if {nw::players::%{_p}%} is less than {nw-ranks::ultimate-aristocrat::req}:
		set slot 15 of {_gui} to sea pickle named "&33. &5Ultimate Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::ultimate-aristocrat::req}% &3Net Worth" and " &b&l»&r &3Net Worth Left: &6%{nw-ranks::ultimate-aristocrat::req} - {nw::players::%{_p}%}%"
	else:
		set slot 15 of {_gui} to sea pickle of fortune 10 named "&33. &5Ultimate Aristocrat&r" with lore " &b&l»&r &3Requirement: &6%{nw-ranks::ultimate-aristocrat::req}% &3Net Worth" and " &b&l»&r &9Click to Equip"
	set slot 26 of {_gui} to feather named "&cBack&r"
	open {_gui} to {_p}

function ranksGuiAdmins(p: player):
	set {_gui} to chest inventory with 3 rows named "§eAdmin Ranks"
	## IDK IF ANY OF THESE COLOURS ARE RIGHT
	set slot (integers between 0 and 26) of {_gui} to blue stained glass pane named " "
	set slot 8 of {_gui} to barrier block named "&cClear Rank"
	set slot 10 of {_gui} to hopper named "&5Trainee Mod&r" with lore "&fRecently appointed mod. Has been a player for 4+ weeks"
	set slot 11 of {_gui} to structure block named "&bTrial Mod&r" with lore "&fHas been a player for 2+ months. Trustworthy"
	set slot 12 of {_gui} to command block named "&aMod&r" with lore "&fHas been a trial mod for 2+ months. Very Trustworthy."
	set slot 14 of {_gui} to chain command block named "&3Senior Mod&r" with lore "&fHas been a mod for 6 months. Highly Trustworthy."
	set slot 15 of {_gui} to repeating command block named "&1Head Mod&r" with lore "&fMost trusted mod. Handpicked by the owner"
	set slot 16 of {_gui} to enchanted golden apple named "&cOwner&r" with lore "&fHas absolute power & authority."
	set slot 26 of {_gui} to feather named "&cBack&r"
	open {_gui} to {_p}

on inventory click: #TODO
	if name of event-inventory is "§eRanks Menu":
		cancel event
		event-inventory is not player's inventory
		if clicked slot is 8:
			removeRank(player)
			send "&3Cleared your rank."
		else if clicked slot is 11:
			ranksGuiKills(player)
		else if clicked slot is 13:
			ranksGuiAdmins(player)
		else if clicked slot is 15:
			ranksGuiNetworth(player)

	else if name of event-inventory is "§cKills Ranks":
		cancel event
		event-inventory is not player's inventory
		set {_k} to {kills::players::%player%}

		if clicked slot is 8:
			removeRank(player)
			send "&3Cleared your rank."
		else if clicked slot is 10: #murderer
			if {_k} is more than or equal to {k-ranks::murderer::req}:
				setRank(player, "murderer")
				send "&3Set your rank to &cMurderer&3."
		else if clicked slot is 11: # gm
			if {_k} is more than or equal to {k-ranks::genocidal-maniac::req}:
				setRank(player, "genocidal-maniac")
				send "&3Set your rank to &cGenocidal Maniac&3."
		else if clicked slot is 12: # sad
			if {_k} is more than or equal to {k-ranks::sadistic::req}:
				setRank(player, "sadistic")
				send "&3Set your rank to &cSadistic&3."
		else if clicked slot is 14: # demon
			if {_k} is more than or equal to {k-ranks::demon::req}:
				setRank(player, "demon")
				send "&3Set your rank to &cDemon&3."
		else if clicked slot is 15: # reaper
			if {_k} is more than or equal to {k-ranks::reaper::req}:
				setRank(player, "reaper")
				send "&3Set your rank to &cReaper&3."
		else if clicked slot is 16: # bg
			if {_k} is more than or equal to {k-ranks::blood-god::req}:
				setRank(player, "blood-god")
				send "&3Set your rank to &cBlood God&3."

		if clicked slot is 26:
			ranksGuiMain(player)
		else:
			ranksGuiKills(player)

	else if name of event-inventory is "§6Networth Ranks":
		cancel event
		event-inventory is not player's inventory

		set {_nw} to {nw::players::%player%}

		if clicked slot is 8:
			removeRank(player)
			send "&3Cleared your rank."
		else if clicked slot is 11:
			if {_nw} is more than or equal to {nw-ranks::aristocrat::req}:
				setRank(player, "aristocrat")
				send "&3Set your rank to &6Aristocrat&3."
		else if clicked slot is 13:
			if {_nw} is more than or equal to {nw-ranks::huge-aristocrat::req}:
				setRank(player, "huge-aristocrat")
				send "&3Set your rank to &6Huge Aristocrat&3."
		else if clicked slot is 15:
			if {_nw} is more than or equal to {nw-ranks::ultimate-aristocrat::req}:
				setRank(player, "ultimate-aristocrat")
				send "&3Set your rank to &6Ultimate Aristocrat&3."

		if clicked slot is 26:
			ranksGuiMain(player)
		else:
			ranksGuiNetworth(player)

	else if name of event-inventory is "§eAdmin Ranks":
		cancel event
		event-inventory is not player's inventory
		if clicked slot is 26:
			ranksGuiMain(player)

command /ranks:
	trigger:
		ranksGuiMain(player)