variables:
	{kill counter.%player%.kills_total} = 0
	{nw::players::%player%} = 0
options:
	kelp_value: 1024
	pickle_value: 2048
	credit_value: 4096

function initializeNW():
	set {nw::items::credits} to a block of amethyst of mending 10
	set {nw::items::ckelp} to a dried kelp block of mending 10
	set {-nw::variables_initialized} to true

on skript start:
	if {-nw::variables_initialized} is not true:
		initializeNW()

command /initializenw:
	permission: skript.nwadmin
	permission message: &cInsufficient Permissions.
	trigger:
		initializeNW()

### KILLS ### 

on death of player:
	attacker is player
	if attacker is victim:
		stop
	else:
		add 1 to {kill counter.%attacker%.kills_total}
	
command /kills [<offline player>]:
	trigger:
		if arg-1 is not set:
			if command sender is not console:
				message "You have %{kill counter.%player%.kills_total}% kills in total."
			else:
				message "&cA console does not have a kill count."
		else if player has permission "skript.getkills":
			message "&b%arg-1% has &6%{kill counter.%arg-1%.kills_total}%&r kills in total."
		else:
			message "&cYou do not have permission to check the kills of other players."

command /modifykills <offline player> <text> <number>:
	aliases: /changekills, /ck
	usage: /ck <target> <+ | -> <amount>
	permission: skript.modifykills
	permission message: &cInsufficient Permissions.
	trigger:
		if arg-2 contains "add" or "+" or "sum":
			add arg-3 to {kills counter.%arg-1%.kills_total}
		else if arg-2 contains "subtract" or "sub" or "minus" or "-" or "difference" or "diff":
			subtract arg-3 from {kills counter.%arg-1%.kills_total}
		else:
			send "&cOne of your arguments is invalid. Please try again."
		send "The player &b%arg-1%&r now has &6%{kill counter.%arg-1%.kills_total}%&r kills total" to player

command /checkkills:
	permission: skript.checkkills
	permission message: you dont have permission
	trigger:
		loop all players:
			send "The player &b%loop-player% has &6%{kill counter.%loop-player%.kills_total}%&r kills in total." to player



### NETWORTH ###
function getInventoryValue(p: player) :: number:

	set {_nw} to (the amount of sea pickles in {_p}'s inventory) * {@pickle_value} 
	add (the amount of dried kelp blocks in {_p}'s inventory) * {@kelp_value} to {_nw}
	add (the amount of {nw::items::ckelp} in {_p}'s inventory) * ({@kelp_value} * 3) to {_nw} # Set to *3, as the other 1 is added earlier
	add (the amount of {nw::items::credits} in {_p}'s inventory) * {@credit_value} to {_nw}

	return {_nw}

function removeItems(p: player, a: number, i: item):
	set {_a_inv} to the amount of {_i} in {_p}'s inventory
	if {_a_inv} is less than {_a}:
		send "&3You do not have enough of this item." to {_p}
	else:
		remove {_a} of {_i} from {_p}'s inventory
		if {_i} is {nw::items::ckelp}:
			add {_a} * {@kelp_value} * 4 to {_nw}
		else if {_i} is {nw::items::credits}:
			add {_a} * {@credit_value} to {_nw}
		else if {_i} is a dried kelp block:
			add {_a} * {@kelp_value} to {_nw}
		else if {_i} is a sea pickle:
			add {_a} * {@pickle_value} to {_nw}
		else:
			send "&cInvalid Item. If you get this error, please report it to a staff member." to {_p}
		add {_nw} to {nw::players::%{_p}%}
		send "&3Added &6%{_nw}% &3to your Net Worth." to {_p}
		send "&3Your Net Worth is now &6%{nw::players::%{_p}%}%" to {_p}

function networthGUI(p: player):
	set {_gui} to chest inventory with 5 rows named "Convert Items"

	set {_kamt} to (the amount of dried kelp blocks in {_p}'s inventory)
	set {_pamt} to (the amount of sea pickles in {_p}'s inventory)
	set {_camt} to (the amount of {nw::items::credits} in {_p}'s inventory)


	set slot (integers between 0 and 45) of {_gui} to light blue stained glass pane
	set slot 0 of {_gui} to the skull of {_p} named "&6%name of {_p}%" with lore " &b&l»&r &3Net Worth: &6%{nw::players::%{_p}%}%"
	set slot 10 of {_gui} to dried kelp block named "&b&lALL &r&3| &2Dried Kelp Block" with lore " &b&l»&r &3Amount: &6%{_kamt}%" and " &b&l»&r &3Value: &6%{_kamt} * {@kelp_value}%"
	set slot 11 of {_gui} to sea pickle named "&b&lALL &r&3| &3Sea Pickles" with lore " &b&l»&r &3Amount: &6%{_pamt}%" and " &b&l»&r &3Value: &6%{_pampt} * {@pickle_value}%"
	set slot 12 of {_gui} to amethyst block named "&b&lALL &r&3| &6Credits" with lore " &b&l»&r &3Amount: &6%{_camt}%" and " &b&l»&r &3Value: &6%{_camt} * {@credit_value}%"
	set slot 14 of {_gui} to stone
	set slot 15 of {_gui} to granite
	set slot 16 of {_gui} to diorite
	set slot 19 of {_gui} to dried kelp block named "&b&lHALF &r&3| &2Dried Kelp Block" with lore " &b&l»&r &3Amount: &6%{_kamt} * 0.5%" and " &b&l»&r &3Value: &6%{_kamt} * {@kelp_value} * 0.5%"
	set slot 20 of {_gui} to sea pickle named "32" with lore "a"
	set slot 21 of {_gui} to amethyst block named "32" with lore "a"
	set slot 23 of {_gui} to stone
	set slot 24 of {_gui} to granite
	set slot 25 of {_gui} to diorite
	set slot 28 of {_gui} to dried kelp block named "1x Dried Kelp Block" with lore "cool lore"
	set slot 29 of {_gui} to sea pickle named "1" with lore "a"
	set slot 30 of {_gui} to amethyst block named "1" with lore "a"
	set slot 32 of {_gui} to stone
	set slot 33 of {_gui} to granite
	set slot 34 of {_gui} to diorite
	open {_gui} to {_p}

command /getcredits:
	trigger:
		initializeNW()
		send "%the amount of {nw::items::credits} in player's inventory%" to player

on inventory click:
	name of event-inventory is "Convert Items"
	cancel event
	event-inventory is not player's inventory
	if clicked slot is 10:
		removeItems(player, the amount of dried kelp blocks in player's inventory, dried kelp block)
		networthGUI(player)
	else if clicked slot is 11:
		removeItems(player, the amount of sea pickles in player's inventory, sea pickle)
		networthGUI(player)
	else if clicked slot is 12:
		send "You clicked on slot 12"
	else if clicked slot is 14:
		send "You clicked on slot 14"
	else if clicked slot is 15:
		send "You clicked on slot 15"
	else if clicked slot is 16:
		send "You clicked on slot 16"
	else if clicked slot is 19:
		send "You clicked on slot 19"
	else if clicked slot is 20:
		send "You clicked on slot 20"
	else if clicked slot is 21:
		send "You clicked on slot 21"
	else if clicked slot is 23:
		send "You clicked on slot 23"
	else if clicked slot is 24:
		send "You clicked on slot 24"
	else if clicked slot is 25:
		send "You clicked on slot 25"
	else if clicked slot is 28:
		send "You clicked on slot 28"
	else if clicked slot is 29:
		send "You clicked on slot 29"
	else if clicked slot is 30:
		send "You clicked on slot 30"
	else if clicked slot is 32:
		send "You clicked on slot 32"
	else if clicked slot is 33:
		send "You clicked on slot 33"
	else if clicked slot is 34:
		send "You clicked on slot 34"

command /convert [<text>] [<number>]:
	trigger:
		networthGUI(player)

### RANKS ###
function setRank(p: offline player, r: text):
	make console execute "/lp user %{_p}% parent set %{_r}%"

function removeRank(p: offline player):
	make console execute "/lp user %{_p}% parent set default"
			
command /addrank [<offline player>] <text>:
	permission: skript.addranks
	permission message: you dont have permission
	trigger:
		setRank(arg-1, arg-2)
		
command /removerank [<offline player>]:
	permission: skript.removeranks
	permission message: you dont have permission
	trigger:
		removeRank(arg-1)